Why should I?
-This really helps!--独立思考问题而非直接找答案对每个学科都是必要的,attention!!
-you'll use this content for vc practice

How?
-one file per lesson
-plain-text,not rich-text--即vim,emaces,notepad,而非ms office,openoffice==,因为txt可在命令行打开,自己的日志文档也用vim较好,但有图就没办法了.


思考题1:How did viewing a diff between two versions help you spot the bug?
答题:比较不同可以发现拼写错误,可以精准定位改动部分,而bug一般出现在改动部分.

思考题2:从长远来看,能轻松访问文件的整个历史记录将如何提高编程者的效率?
答题:1.编程者可以查阅自己之前做出的改动,再次修改时可作参考
     2.更换工作人员后,能查阅之前对文件的改动记录,也方便维护程序
     3.修改后出现bug也便于分析错误

思考题3:你认为,手动选择何时创建提交(像在Git中做的那样)与自动保存版本(如Google Docs所作的那样)各有何优缺点?
答题:1.手动选择更加灵活,由程序员自己选择,可避免过于频繁保存版本以浪费存储空间
     2.但手动选择对程序员要求较高,程序员忘记创建提交或者提交改动过大会造成麻烦
     3.自动保存版本则不会出现忘记提交的事情,但可能浪费存储空间,版本过多也造成管理不便,降低效率

思考题4:你认为为何一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
答题:Git保存的是代码库,里面的文件相互联系,其它系统保存的文件并不一定相互联系

思考题5:如何使用命令 git log 和 git diff 来查看文件的历史记录？
答题:git log直接用,再git diff + 两个序列号,比较改动.

思考题6:使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
答题:复制下当前commit ID,更改后测试若出问题,可git checkout恢复.
